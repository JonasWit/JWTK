// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SystemyWP.Data;

namespace SystemyWP.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210802064423_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SystemyWP.Data.Models.General.ApiLogRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EventName")
                        .HasColumnType("text");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("text");

                    b.Property<int>("LogLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApiLogs");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.General.PortalLogRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Endpoint")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("text");

                    b.Property<string>("ExceptionStackTrace")
                        .HasColumnType("text");

                    b.Property<int>("LogType")
                        .HasColumnType("integer");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("Id");

                    b.ToTable("PortalLogs");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.General.PortalPublication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("News")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.Property<int>("PortalPublicationCategory")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("PortalPublications");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.General.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AddressCorrespondence")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CompanyFullName")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(265)
                        .HasColumnType("character varying(265)");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Krs")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LegalAppAccessKeyId")
                        .HasColumnType("integer");

                    b.Property<int?>("MedicalAccessKeyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Nip")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("PostCode")
                        .HasColumnType("text");

                    b.Property<string>("Regon")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(265)
                        .HasColumnType("character varying(265)");

                    b.Property<string>("Vivodership")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppAccessKeyId");

                    b.HasIndex("MedicalAccessKeyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Access.DataAccessModifiers.LegalAppDataAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("LegalAppAccessKeyId")
                        .HasColumnType("integer");

                    b.Property<int>("LegalAppRestrictedType")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("LegalAppAccessKeyId");

                    b.HasIndex("UserId");

                    b.ToTable("LegalAppDataAccesses");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Access.LegalAppAccessKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("LegalAppAccessKeys");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Access.LegalAppBillingRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("LegalAppAccessKeyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nip")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Regon")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Street")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppAccessKeyId");

                    b.ToTable("LegalAppBillingData");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.Cases.LegalAppCase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<long>("LegalAppClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Signature")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppClientId");

                    b.ToTable("LegalAppCases");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.Cases.LegalAppCaseDeadline", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("LegalAppCaseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppCaseId");

                    b.ToTable("LegalAppCaseDeadlines");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.Cases.LegalAppCaseNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long>("LegalAppCaseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppCaseId");

                    b.ToTable("LegalAppCaseNotes");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("LegalAppAccessKeyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppAccessKeyId");

                    b.ToTable("LegalAppClients");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClientNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long>("LegalAppClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Public")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppClientId");

                    b.ToTable("LegalAppClientNotes");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClientWorkRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Hours")
                        .HasColumnType("integer");

                    b.Property<string>("LawyerName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<long>("LegalAppClientId")
                        .HasColumnType("bigint");

                    b.Property<int>("Minutes")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Vat")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppClientId");

                    b.ToTable("LegalAppClientWorkRecords");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppContactDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Comment")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long>("LegalAppClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Surname")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppClientId");

                    b.ToTable("LegalAppContacts");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppEmailAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long?>("LegalAppContactDetailId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppContactDetailId");

                    b.ToTable("LegalAppEmailAddresses");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppPhoneNumber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long?>("LegalAppContactDetailId")
                        .HasColumnType("bigint");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppContactDetailId");

                    b.ToTable("LegalAppPhoneNumbers");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppPhysicalAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Building")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("City")
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(75)
                        .HasColumnType("character varying(75)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long?>("LegalAppContactDetailId")
                        .HasColumnType("bigint");

                    b.Property<string>("PostCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppContactDetailId");

                    b.ToTable("LegalAppPhysicalAddresses");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Reminders.LegalAppReminder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<bool>("AllDayEvent")
                        .HasColumnType("boolean");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LegalAppAccessKeyId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Public")
                        .HasColumnType("boolean");

                    b.Property<int>("ReminderCategory")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("LegalAppAccessKeyId");

                    b.ToTable("LegalAppReminders");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.MedicalAppModels.Access.DataAccessModifiers.MedicalAppDataAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("MedicalAccessKeyId")
                        .HasColumnType("integer");

                    b.Property<int>("MedicalAppRestrictedType")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("MedicalAccessKeyId");

                    b.HasIndex("UserId");

                    b.ToTable("MedicalAppDataAccesses");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.MedicalAppModels.Access.MedicalAccessKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("MedicalAccessKeys");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.MedicalAppModels.Patients.MedicalAppPatient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("MedicalAccessKeyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("MedicalAccessKeyId");

                    b.ToTable("MedicalAppPatients");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.General.User", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Access.LegalAppAccessKey", "LegalAppAccessKey")
                        .WithMany("Users")
                        .HasForeignKey("LegalAppAccessKeyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SystemyWP.Data.Models.MedicalAppModels.Access.MedicalAccessKey", "MedicalAccessKey")
                        .WithMany("Users")
                        .HasForeignKey("MedicalAccessKeyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("LegalAppAccessKey");

                    b.Navigation("MedicalAccessKey");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Access.DataAccessModifiers.LegalAppDataAccess", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Access.LegalAppAccessKey", "LegalAppAccessKey")
                        .WithMany("LegalAppDataAccesses")
                        .HasForeignKey("LegalAppAccessKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemyWP.Data.Models.General.User", "User")
                        .WithMany("LegalAppDataAccesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("LegalAppAccessKey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Access.LegalAppBillingRecord", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Access.LegalAppAccessKey", "LegalAppAccessKey")
                        .WithMany("LegalAppClientBillingData")
                        .HasForeignKey("LegalAppAccessKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalAppAccessKey");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.Cases.LegalAppCase", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClient", "LegalAppClient")
                        .WithMany("LegalAppCases")
                        .HasForeignKey("LegalAppClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalAppClient");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.Cases.LegalAppCaseDeadline", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Clients.Cases.LegalAppCase", "LegalAppCase")
                        .WithMany("LegalAppCaseDeadlines")
                        .HasForeignKey("LegalAppCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalAppCase");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.Cases.LegalAppCaseNote", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Clients.Cases.LegalAppCase", "LegalAppCase")
                        .WithMany("LegalAppCaseNotes")
                        .HasForeignKey("LegalAppCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalAppCase");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClient", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Access.LegalAppAccessKey", "LegalAppAccessKey")
                        .WithMany("LegalAppClients")
                        .HasForeignKey("LegalAppAccessKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalAppAccessKey");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClientNote", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClient", "LegalAppClient")
                        .WithMany("LegalAppClientNotes")
                        .HasForeignKey("LegalAppClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalAppClient");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClientWorkRecord", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClient", "LegalAppClient")
                        .WithMany("LegalAppClientWorkRecords")
                        .HasForeignKey("LegalAppClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalAppClient");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppContactDetail", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClient", null)
                        .WithMany("Contacts")
                        .HasForeignKey("LegalAppClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppEmailAddress", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppContactDetail", null)
                        .WithMany("Emails")
                        .HasForeignKey("LegalAppContactDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppPhoneNumber", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppContactDetail", null)
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("LegalAppContactDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppPhysicalAddress", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppContactDetail", null)
                        .WithMany("PhysicalAddresses")
                        .HasForeignKey("LegalAppContactDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Reminders.LegalAppReminder", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.LegalAppModels.Access.LegalAppAccessKey", "LegalAppAccessKey")
                        .WithMany("LegalAppReminders")
                        .HasForeignKey("LegalAppAccessKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LegalAppAccessKey");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.MedicalAppModels.Access.DataAccessModifiers.MedicalAppDataAccess", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.MedicalAppModels.Access.MedicalAccessKey", "MedicalAccessKey")
                        .WithMany("MedicalAppDataAccesses")
                        .HasForeignKey("MedicalAccessKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemyWP.Data.Models.General.User", "User")
                        .WithMany("MedicalAppDataAccesses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MedicalAccessKey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.MedicalAppModels.Patients.MedicalAppPatient", b =>
                {
                    b.HasOne("SystemyWP.Data.Models.MedicalAppModels.Access.MedicalAccessKey", "MedicalAccessKey")
                        .WithMany("MedicalAppPatients")
                        .HasForeignKey("MedicalAccessKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicalAccessKey");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.General.User", b =>
                {
                    b.Navigation("LegalAppDataAccesses");

                    b.Navigation("MedicalAppDataAccesses");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Access.LegalAppAccessKey", b =>
                {
                    b.Navigation("LegalAppClientBillingData");

                    b.Navigation("LegalAppClients");

                    b.Navigation("LegalAppDataAccesses");

                    b.Navigation("LegalAppReminders");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.Cases.LegalAppCase", b =>
                {
                    b.Navigation("LegalAppCaseDeadlines");

                    b.Navigation("LegalAppCaseNotes");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Clients.LegalAppClient", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("LegalAppCases");

                    b.Navigation("LegalAppClientNotes");

                    b.Navigation("LegalAppClientWorkRecords");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.LegalAppModels.Contacts.LegalAppContactDetail", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("PhysicalAddresses");
                });

            modelBuilder.Entity("SystemyWP.Data.Models.MedicalAppModels.Access.MedicalAccessKey", b =>
                {
                    b.Navigation("MedicalAppDataAccesses");

                    b.Navigation("MedicalAppPatients");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
